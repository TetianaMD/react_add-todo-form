{"version":3,"sources":["api/users.ts","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","services/user.ts","index.tsx"],"names":["id","name","username","email","TodoList","onAdd","todos","useState","title","userId","formState","setFormState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","className","action","method","onSubmit","e","preventDefault","currentTodos","Math","max","map","todo","completed","type","value","onChange","target","prev","placeholder","disabled","usersFromServer","user","href","initialTodo","find","App","setTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c391995.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../types/Todo';\n// import { getUserById } from '../../services/user';\n\ntype Props = {\n  onAdd: Dispatch<SetStateAction<Todo[]>>;\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ onAdd, todos }) => {\n  const [formState, setFormState] = useState({\n    title: '',\n    userId: 0,\n  });\n\n  const areRequiredFieldsFilled = () => {\n    return (\n      formState.title !== ''\n      && formState.userId !== 0\n    );\n  };\n\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(true);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(true);\n\n  const generateNewId = () => {\n    return Math.max(...todos.map(todo => todo.id)) + 1;\n  };\n\n  const handleAdd = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!hasTitleError || !hasUserIdError) {\n      setHasTitleError(false);\n      setHasUserIdError(false);\n    }\n\n    // onAdd({\n    //   id: generateNewId(),\n    //   title: formState.title,\n    //   completed: false,\n    //   userId,\n    // });\n\n    onAdd((currentTodos) => [...currentTodos, {\n      id: generateNewId(),\n      title: formState.title,\n      completed: false,\n      userId,\n    }]);\n  };\n\n  const handleUserIdChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { name, value } = e.target;\n\n    setFormState(prev => ({ ...prev, [name]: value }));\n    setUserId(+e.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setFormState(prev => ({ ...prev, [name]: value }));\n    setTitle(e.target.value);\n    setHasTitleError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleAdd}\n      >\n        <div className=\"field\">\n          Title:&nbsp;\n          <label>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={handleTitleChange}\n              placeholder=\"Please enter a title\"\n            />\n            {hasTitleError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n\n        </div>\n        <div className=\"field\">\n          User:&nbsp;\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          disabled={areRequiredFieldsFilled()}\n        >\n          Add\n        </button>\n      </form>\n      <section className=\"TodoList\">\n        <article data-id=\"1\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">\n            delectus aut autem\n          </h2>\n\n          <a\n            className=\"UserInfo\"\n            href=\"mailto:Sincere@april.biz\"\n          >\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"15\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">delectus aut autem</h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"2\" className=\"TodoInfo\">\n          <h2 className=\"TodoInfo__title\">\n            quis ut nam facilis et officia qui\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Julianne.OConner@kory.org\">\n            Patricia Lebsack\n          </a>\n        </article>\n      </section>\n    </div>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport { Todo } from './components/types/Todo';\nimport { getUserById } from './services/user';\n\nconst initialTodo: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodo);\n\n  // const addTodo = (newTodos: Todo) => {\n  //   setTodos(currentTodos => [...currentTodos, newTodos]);\n\n  //   console.log(newTodos);\n  // };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoList\n        todos={todos}\n        onAdd={setTodos}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../components/types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}