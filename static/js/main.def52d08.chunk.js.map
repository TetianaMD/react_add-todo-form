{"version":3,"sources":["api/users.ts","services/user.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","UserInfo","className","href","TodoInfo","todo","completed","title","getNewTodoId","todos","Math","max","map","TodoList","onAdd","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","action","method","onSubmit","e","preventDefault","trim","htmlFor","type","value","onChange","target","placeholder","disabled","currentUser","initialTodo","App","setTodos","newTodos","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.def52d08.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../components/types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n","import { User } from '../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user?.email}`}\n    >\n      {user?.name}\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article className={\n      `TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`\n    }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {todo.user && (\n        <UserInfo\n          user={todo.user}\n        />\n      )}\n    </article>\n  );\n};\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../types/Todo';\nimport { getUserById } from '../../services/user';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  onAdd: (todo: Todo) => void;\n  todos: Todo[];\n};\n\nconst getNewTodoId = (todos: Todo[]) => {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  onAdd,\n  todos,\n}) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const areRequiredFieldsFilled = () => {\n    return (\n      title.trim() === '' || userId === 0\n    );\n  };\n\n  const handleAdd = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (areRequiredFieldsFilled()) {\n      setHasTitleError(title.trim() === '');\n      setHasUserIdError(userId === 0);\n\n      return;\n    }\n\n    if (hasTitleError || hasUserIdError) {\n      return;\n    }\n\n    onAdd({\n      id: getNewTodoId(todos),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleUserIdChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setHasTitleError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleAdd}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={handleTitleChange}\n              placeholder=\"Please enter a title\"\n            />\n            {hasTitleError && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )}\n          </label>\n\n        </div>\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserIdChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(currentUser => (\n                <option value={currentUser.id} key={currentUser.id}>\n                  {currentUser.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {hasUserIdError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <section className=\"TodoList\">\n        {todos.map(todo => (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n          />\n        ))}\n      </section>\n    </div>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport { Todo } from './components/types/Todo';\nimport { getUserById } from './services/user';\n\nconst initialTodo: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodo);\n\n  const addTodo = (newTodos: Todo) => {\n    setTodos(currentTodos => [...currentTodos, newTodos]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoList\n        todos={todos}\n        onAdd={addTodo}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}